{
    "title": "Trajectory Planning Dataset for Industrial Robots",
    "intro_text": "This dataset is specifically created for robot obstacle avoidance training. Diverse and extensive training data is crucial for training the obstacle avoidance capabilities in industrial scenarios. The dataset in this article is collected in a simulation environment and contains 10,000 successful paths. These paths are related to the top-down grasping of moving objects using the Franka Panda robotic arm. The objects are randomly placed in the XYZ space and need to avoid randomly generated obstacles.",
    "org": "Issuing Organization:",
    "org_value": "ACT Laboratory, Beihang University",
    "release_date": "Release Date:",
    "release_date_value": "October 22, 2024",
    "update_date": "Update Date:",
    "update_date_value": "October 25, 2024",
    "samples": "Number of Sample Points:",
    "samples_value": "10,000",
    "features": "Features:",
    "features_value": "7",
    "task": "Related Task:",
    "task_value": "Path Planning",
    "time": "time (Timestamp in ms)",
    "axle_moment": "axle_moment: Torque of the Nth axis of the robot (NM)",
    "axle_position": "axle_position: Rotational position of the Nth axis of the robot (°)",
    "axle_speed": "axle_speed: Angular velocity of the Nth axis of the robot (°/s)",
    "size": "Dataset Size: 20GB",
    "format": "Storage Format: hdf5",
    "robot_model": "Dataset Name: Robot-obtalcles-panda (ROP)",
    "video1": "Grinding Robot",
    "video2": "Palletizing Robot",
    "video3": "Assembly Robot",
    "gif1": "Data Example 1",
    "gif2": "Data Example 2",
    "gif3": "Data Example 3",
    "citation": "Citation",
    "table_key": "Key",
    "table_dimension": "Dimension",
    "table_value": "Value",
    "m_length_dimension": "Actual length of the variable-length joint sequence",
    "solutions_dimension": "Joint sequence information. The first dimension is the sequence length, and the second dimension is the number of robot joints. Only the sequence before m_length is meaningful, and the sequence after m_length is filled with 0s.",
    "sphere_centers_dimension": "Center positions (x, y, z) of the two spherical obstacles",
    "sphere_radiis_dimension": "Radii of the two spherical obstacles, with a value range of (0.1, 0.2). Setting the corresponding value to 0 means that the obstacle does not exist, which is the default filling.",
    "cube_centers_dimension": "Center positions (x, y, z) of the two cubic obstacles",
    "cube_sizes_dimension": "Radii of the two spherical obstacles, with a value range of (0.1, 0.2). Setting the corresponding value to 0 means that the obstacle does not exist, which is the default filling.",
    "instruction": "Usage Tutorial",
    "dataset_generation_method_title": "Dataset Generation Method",
    "data_scale_title": "Data Scale",
    "scene_setup_title": "Scene Setup",
    "path_generation_algorithm_title": "Path Generation Algorithm",
    "dataset_generation_method": "Dataset Generation Method: A dataset pipeline was created using Pybullet to generate the ROP dataset.",
    "data_scale": "Data Scale: It contains more than 35 million frames of robot pose data and over 140,000 obstacle avoidance scenarios. Such a large-scale dataset can cover a rich and diverse range of robot motion states and complex obstacle avoidance situations, providing sufficient information for model training.",
    "scene_setup": "Scene Setup: Each scene has challenging obstacle avoidance spheres set at random positions. Unlike the fixed obstacles used in most current works, the randomly distributed obstacle avoidance spheres make the scenes more complex and diverse, closer to the dynamic and complex environments that robots face in the real world, and can more effectively test the performance of algorithms in complex situations.",
    "path_generation_algorithm": "Path Generation Algorithm: The Shared-Tree Informed RRT algorithm was proposed to generate suitable paths for the dataset. This algorithm is based on Informed RRT and introduces the node security defense and shared generation tree strategies. The node security defense strategy ensures that the robot avoids collisions during movement and maintains a safe distance from obstacles, solving the problem that paths generated by traditional algorithms may be too close to obstacles; the shared generation tree strategy allows the simultaneous search for multiple target poses (CSgoals). By reusing the generated tree structure, it provides optimal paths for multiple targets, improving the efficiency and quality of path generation."
} 